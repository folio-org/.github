name: FOLIO UI Workflows

on:
  workflow_call:
    inputs:
      # node/yarn configuration
      node-version:
        description: Node version to use, in semver notation.
          Examples include 12.x, 10.15.1, >=10.15.0, lts/Hydrogen, 16-nightly, latest, node
        required: false
        type: string
        default: "20.x"
      folio-npm-registry:
        description: Full URL to the registry to use for @folio modules.
          Defaults to "https://repository.folio.org/repository/npm-folioci/"
        required: false
        type: string
        default: "https://repository.folio.org/repository/npm-folioci/"
      debug-yarn-packages:
        description:
          Whether to print all packages installed by yarn and force publish yarn.lock.
          This should not be enabled except during debugging. Defaults to false
        required: false
        type: boolean
        default: false

      # linting
      allow-lint-errors:
        description: Whether to allow lint errors; if false, errors will fail the build. Defaults to true
        required: false
        type: boolean
        default: true

      # translations
      compile-translations:
        description: Whether to compile translation files. Defaults to true
        required: false
        type: boolean
        default: true

jobs:
  version-number:
    uses: ./.github/workflows/ui-version-number.yml

  install-and-lint:
    uses: ./.github/workflows/ui-install-and-lint.yml
    with:
      node-version: ${{ inputs.node-version }}
      folio-npm-registry: ${{ inputs.folio-npm-registry }}
      allow-lint-errors: ${{ inputs.allow-lint-errors }}
      # responsible for printing install information and publishing yarn.lock if needed
      debug-yarn-packages: ${{ inputs.debug-yarn-packages }}

  translations:
    uses: ./.github/workflows/ui-translations.yml
    if: ${{ inputs.compile-translations }}
    with:
      node-version: ${{ inputs.node-version }}

  debug:
    needs: [install-and-lint, version-number]
    runs-on: ubuntu-latest
    steps:
      - name: echo version-number
        run: echo ${{ needs.version-number.outputs.version-number }}

      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          show-progress: false # spammy

      - name: Install Node ${{ inputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          check-latest: true
          always-auth: true

      - name: Download yarn.lock
        uses: actions/download-artifact@v4
        with:
          name: yarn.lock
          path: .

      - name: ls
        run: ls -la

      # cached??
      - name: Install dependencies
        run: yarn install --ignore-scripts --non-interactive --prefer-offline
