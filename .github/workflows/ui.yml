name: FOLIO UI Workflows

on:
  workflow_call:
    inputs:
      # node/yarn configuration
      node-version:
        description: Node version to use, in semver notation.
          Examples include 12.x, 10.15.1, >=10.15.0, lts/Hydrogen, 16-nightly, latest, node
        required: false
        type: string
        default: "18.x"
      # It should be straightforward to add a customizable Yarn version via a simple `yarn set version 3.x` or similar
      # https://yarnpkg.com/cli/set/version
      folio-npm-registry:
        description: Full URL to the registry to use for @folio modules.
          Defaults to "https://repository.folio.org/repository/npm-folioci/" or "https://repository.folio.org/repository/npm-folio/" for tags
        required: false
        type: string
        default: ${{ startsWith(github.ref, 'refs/tags/v') && 'https://repository.folio.org/repository/npm-folio/' || 'https://repository.folio.org/repository/npm-folioci/' }}

      # linting
      allow-lint-errors:
        description: Whether to allow lint errors; if false, errors will fail the build. Defaults to true
        required: false
        type: boolean
        default: true

      # unit tests (Jest)
      jest-enabled:
        description: Whether to run Jest tests. Defaults to true
        required: false
        type: boolean
        default: true
      jest-test-command:
        description: Command to run Jest tests. Defaults to "yarn test"
        required: false
        type: string
        default: yarn test
      jest-junit-output-dir:
        description:
          Directory in which Jest reports are stored in, without trailing slash.
          Defaults to "artifacts/jest-junit"
        required: false
        type: string
        default: artifacts/jest-junit
      jest-coverage-report-dir:
        description:
          Directory in which Jest coverage reports are stored in, with trailing slash. LCOV data should be in "lcov.info".
          Defaults to "artifacts/coverage-jest/"
        required: false
        type: string
        default: artifacts/coverage-jest/

      # unit tests (Bigtest)
      bigtest-enabled:
        description: Whether to run Bigtest tests. Defaults to false
        required: false
        type: boolean
        default: false
      bigtest-test-command:
        description: Command to run Bigtest tests. Defaults to "yarn test"
        required: false
        type: string
        default: yarn test
      bigtest-junit-output-dir:
        description:
          Directory in which Bigtest reports are stored in, without trailing slash.
          Defaults to "artifacts/runTest"
        required: false
        type: string
        default: artifacts/runTest
      bigtest-coverage-report-dir:
        description:
          Directory in which Jest coverage reports are stored in, with trailing slash. LCOV data should be in "lcov.info".
          Defaults to "artifacts/coverage/"
        required: false
        type: string
        default: artifacts/coverage/

      # sonar
      sonar-sources:
        description:
          A comma-separated list of directories containing code to analyze (no wildcards or whitespace).
          Defaults to "./src".  See https://docs.sonarsource.com/sonarcloud/advanced-setup/analysis-parameters/#analysis-scope for more.
        required: false
        type: string
        default: ./src
      sonar-exclusions:
        description: |
          A comma-separated list of wildcards to exclude from analysis. If overriding, you'll probably want to use YAML folded newlines (https://yaml-multiline.info/)
          Defaults to all of (without the comments):
            ```
             # documentation
            docs/**,
            examples/**,
            **/*.md,
            **/.stories.*,
            **/stories/*,
            LICENSE,

             # build/CI artifacts
            artifacts/**,
            ci/**,
            node_modules/**,

             # tests
            **/tests/**,
            **/test/**,
            resources/bigtest/interactors/**,
            resources/bigtest/network/**,
            **/*-test.*,
            **/*.test.*,
            karma.conf.*,
            jest.config.*,

             # misc
            *.css,
            *.json,
            ```
        required: false
        type: string
        default: >
          docs/**,
          examples/**,
          **/*.md,
          **/stories/*,
          **/.stories.*,
          LICENSE,
          artifacts/**,
          ci/**,
          node_modules/**,
          **/tests/**,
          **/test/**,
          resources/bigtest/interactors/**,
          resources/bigtest/network/**,
          **/*-test.*,
          **/*.test.*,
          karma.conf.*,
          jest.config.*,
          **/*.css,
          **/*.json

      # translations
      compile-translations:
        description: Whether to compile translation files. Defaults to true; if disabled, none will be included in the published module, either.
        required: false
        type: boolean
        default: true

      # module descriptor
      generate-module-descriptor:
        description: Whether to generate a module descriptor (will be included in NPM package). Defaults to true
        required: false
        type: boolean
        default: true
      publish-module-descriptor:
        description: Whether to publish a module descriptor to the {module-descriptor-registry}. Defaults to true
        required: false
        type: boolean
        default: true
      module-descriptor-registry:
        description: Okapi instance to publish the module descriptor to. Defaults to "https://folio-registry.dev.folio.org"
        required: false
        type: string
        default: https://folio-registry.dev.folio.org

      # module publishing
      folio-npm-registry-auth:
        description: NPM config key for authentication to the FOLIO NPM registry. Defaults to "//repository.folio.org/repository/npm-folioci/" or "//repository.folio.org/repository/npm-folio/" for tags
        required: false
        type: string
        default: ${{ startsWith(github.ref, 'refs/tags/v') && '//repository.folio.org/repository/npm-folio/' || '//repository.folio.org/repository/npm-folioci/' }}
      publish-exclusions:
        description: Files not to include in the published package, in addition to the .npmignore. Defaults to artifacts, .github, and .scannerwork.
        required: false
        type: string
        default: |
          artifacts
          .github
          .scannerwork
    secrets:
      # these need to be non-required to allow anything here for forks
      # however, the sub-workflows will fail appropriately if these are not present, as applicable
      SONAR_TOKEN:
        description: Token for performing SonarCloud analysis
        required: false
      DOCKER_USER:
        description: Username for pulling Okapi docker image
        required: false
      DOCKER_PASSWORD:
        description: Password for pulling Okapi docker image
        required: false
      NPM_TOKEN:
        description: Token for publishing to NPM
        required: false
      FOLIO_REGISTRY_USERNAME:
        description: Username for publishing module descriptor
        required: false
      FOLIO_REGISTRY_PASSWORD:
        description: Password for publishing module descriptor
        required: false

jobs:
  # this job is responsible for printing install information and publishing yarn.lock if debug is enabled
  install-and-lint:
    name: Install and lint
    uses: ./.github/workflows/ui-install-and-lint.yml
    with:
      node-version: ${{ inputs.node-version }}
      folio-npm-registry: ${{ inputs.folio-npm-registry }}
      allow-lint-errors: ${{ inputs.allow-lint-errors }}

  jest-tests:
    name: Run Jest tests
    uses: ./.github/workflows/ui-tests-jest.yml
    if: ${{ inputs.jest-enabled }}
    with:
      node-version: ${{ inputs.node-version }}
      folio-npm-registry: ${{ inputs.folio-npm-registry }}
      jest-test-command: ${{ inputs.jest-test-command }}
      jest-junit-output-dir: ${{ inputs.jest-junit-output-dir }}
      jest-coverage-report-dir: ${{ inputs.jest-coverage-report-dir }}

  bigtest-tests:
    name: Run Bigtest tests
    if: ${{ inputs.bigtest-enabled }}
    uses: ./.github/workflows/ui-tests-bigtest.yml
    with:
      node-version: ${{ inputs.node-version }}
      folio-npm-registry: ${{ inputs.folio-npm-registry }}
      bigtest-test-command: ${{ inputs.bigtest-test-command }}
      bigtest-junit-output-dir: ${{ inputs.bigtest-junit-output-dir }}
      bigtest-coverage-report-dir: ${{ inputs.bigtest-coverage-report-dir }}

  translations:
    name: Compile translations
    if: ${{ inputs.compile-translations }}
    uses: ./.github/workflows/ui-translations.yml
    with:
      node-version: ${{ inputs.node-version }}
      folio-npm-registry: ${{ inputs.folio-npm-registry }}

  sonarcloud:
    name: SonarCloud analysis
    needs: [jest-tests, bigtest-tests]
    # run even if tests fail
    if: ${{ !cancelled() }}
    uses: ./.github/workflows/ui-sonarcloud.yml
    with:
      sonar-sources: ${{ inputs.sonar-sources }}
      sonar-exclusions: ${{ inputs.sonar-exclusions }}
      bigtest-coverage-report-dir: ${{ inputs.bigtest-coverage-report-dir }}
      jest-coverage-report-dir: ${{ inputs.jest-coverage-report-dir }}
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  version-number:
    # used for module descriptor and publishing to NPM
    uses: ./.github/workflows/ui-version-number.yml

  generate-module-descriptor:
    name: Generate module descriptor
    needs: [version-number]
    if: ${{ inputs.generate-module-descriptor }}
    uses: ./.github/workflows/ui-module-descriptor-generate.yml
    with:
      node-version: ${{ inputs.node-version }}
      folio-npm-registry: ${{ inputs.folio-npm-registry }}
      package-version: ${{ needs.version-number.outputs.version-number }}

  okapi-dependency-check:
    name: Okapi dependency check (main branch only)
    needs: [generate-module-descriptor]
    if: ${{ inputs.generate-module-descriptor && startsWith(github.ref, 'refs/tags/v') }}
    uses: ./.github/workflows/ui-module-descriptor-verify.yml
    with:
      okapi-pull-contents: '{"urls": ["https://folio-registry.dev.folio.org"]}'
    secrets:
      docker-username: ${{ secrets.DOCKER_USER }}
      docker-password: ${{ secrets.DOCKER_PASSWORD }}

  publish-module-descriptor:
    name: Publish module descriptor (main branch only)
    needs: [generate-module-descriptor, okapi-dependency-check]
    # okapi-dependency-check is optional, but if it's enabled, we want to require it (for tag releases)
    if: |
      !cancelled() &&
      inputs.publish-module-descriptor &&
      (needs.okapi-dependency-check.result == 'success' || needs.okapi-dependency-check.result == 'skipped') &&
      github.ref_name == github.event.repository.default_branch
    uses: ./.github/workflows/ui-module-descriptor-publish.yml
    with:
      module-descriptor-registry: ${{ inputs.module-descriptor-registry }}
    secrets:
      registry-username: ${{ secrets.FOLIO_REGISTRY_USERNAME }}
      registry-password: ${{ secrets.FOLIO_REGISTRY_PASSWORD }}

  publish-module:
    name: Publish module (main branch only)
    needs:
      - install-and-lint
      - version-number
      - generate-module-descriptor
      - okapi-dependency-check
      - translations
      - jest-tests
      - bigtest-tests
    # we want to run this iff module descriptor/tests/etc succeed or are skipped (e.g. no bigtests are present means bigtest-tests is skipped)
    # by default, if a needed job is skipped, this job is skipped too. So we have to say
    # always (!cancelled), and then check specifically.
    if: |
      !cancelled() &&
      needs.install-and-lint.result == 'success' &&
      needs.version-number.result == 'success' &&
      (needs.generate-module-descriptor.result == 'success' || needs.generate-module-descriptor.result == 'skipped') &&
      (needs.okapi-dependency-check.result == 'success' || needs.okapi-dependency-check.result == 'skipped') &&
      (needs.translations.result == 'success' || needs.translations.result == 'skipped') &&
      (needs.jest-tests.result == 'success' || needs.jest-tests.result == 'skipped') &&
      (needs.bigtest-tests.result == 'success' || needs.bigtest-tests.result == 'skipped') &&
      github.ref_name == github.event.repository.default_branch

    uses: ./.github/workflows/ui-publish-module.yml
    with:
      node-version: ${{ inputs.node-version }}
      folio-npm-registry: ${{ inputs.folio-npm-registry }}
      folio-npm-registry-auth: ${{ inputs.folio-npm-registry-auth }}
      package-version: ${{ needs.version-number.outputs.version-number }}
      publish-exclusions: ${{ inputs.publish-exclusions }}
      module-descriptor-available: ${{ inputs.generate-module-descriptor }}
      compiled-translations-available: ${{ inputs.compile-translations }}
    secrets:
      npm-token: ${{ secrets.NPM_TOKEN }}
